<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
		<!-- 1. JDBC 연결 설정하기 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<property name="username" value="test4"/>
		<property name="password" value="test4"/>
	</bean>
	
	<bean id="realDataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
	<constructor-arg ref="dataSource"/>
	<property name="logFormatter">
	<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
	<property name="loggingType" value="MULTI_LINE"/>
	<property name="sqlPrefix" value="[SQL]"></property>
	</bean>
	</property>
	</bean>
	
	
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="realDataSource"/>
		<!-- classpath: -> resource 에서 시작한다 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<property name="mapperLocations" value="classpath:mapper/**/*.xml"></property>
	</bean>
	
	<!-- 객체 생성을 위한 sqlSessionTemplate 객체 생성 -->
	
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
	<constructor-arg index="0" ref="sqlSessionFactoryBean"/>
	</bean>
	
	
	<!-- 트랜젝션 매니저 bean으로 등록 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<property name="dataSource" ref="realDataSource"/>
	</bean>
	<!-- 선언적 트랜젝션 등록 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
	<tx:attributes>
	<tx:method name="select*" rollback-for="Exception" read-only="true"/>
	<tx:method name="insert*" rollback-for="Exception" />
	<tx:method name="delete*" rollback-for="Exception" />
	<tx:method name="update*" rollback-for="Exception" />
	
	</tx:attributes>
	</tx:advice>
	<!-- 트랜젝션 aop 등록 -->
	<aop:config proxy-target-class="true">
	<aop:pointcut expression="execution(* com.yj.project..*ServiceImpl.*(..))" id="serviceMethod"/>
	<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethod" id="transactionAdvisor"/>
	</aop:config>
</beans>
